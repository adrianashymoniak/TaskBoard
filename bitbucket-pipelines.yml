# This is a sample build configuration for Python.
# Check our guides at https://confluence.atlassian.com/x/x4UWN for more examples.
# Only use spaces to indent your .yml configuration.
# -----
# You can specify a custom docker image from Docker Hub as your build environment.
image: python:3.6.3
clone:
  depth: full

pipelines:
  default:
    - step:
        name: Deploy to Heroku test server
        script:
          - git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$STG_HEROKU_APP_NAME.git HEAD

    - step:
        name: Run tests against test server
        image: joyzoursky/python-chromedriver:3.6-selenium
        caches:
          - pip
        script:
           - pip install -r requirements.txt
           - echo -e "BASE_URL = '$STG_BASE_URL'\nDB_SETUP = {'database':'$STG_DB_NAME', 'user':'$STG_DB_USER', 'password':'$STG_DB_PASSWORD', 'host':'$STG_DB_HOST', 'port':'$STG_DB_PORT'}\nHEADLESS = True\nAPP_TIME_ZONE = 'Europe/Kiev'\n" > e2etests/configs.py
           - echo -e "EMAIL_HOST = '$EMAIL_HOST'\nEMAIL_USE_TLS = True\nEMAIL_PORT = 587\nEMAIL_HOST_USER = '$EMAIL_HOST_USER'\nEMAIL_HOST_PASSWORD = '$EMAIL_HOST_PASSWORD'\n" > task_board_application/settings/emailer_settings.py
           - mkdir test-reports
           - nosetests --with-xunit -v -m "(tests)|(^test_user_can)" --xunit-file=./test-reports/nose-junit.xml

    - step:
        name: Deploy to Heroku production server
        script:
          - git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$PRODUCTION_HEROKU_APP_NAME.git HEAD
